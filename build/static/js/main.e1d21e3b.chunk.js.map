{"version":3,"sources":["components/SearchBar.jsx","components/About.jsx","components/Nav.jsx","components/Card.jsx","components/Cards.jsx","components/Ciudad.jsx","containers/App.js","index.js"],"names":["SearchBar","onSearch","useState","city","setCity","className","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","About","href","Nav","class","Card","min","max","name","img","onClose","id","onClick","to","src","width","height","alt","Cards","cities","map","c","Ciudad","temp","weather","wind","clouds","latitud","longitud","App","setCities","onFilter","ciudadId","ciudad","filter","parseInt","length","fetch","then","r","json","recurso","undefined","main","Math","round","temp_min","temp_max","icon","speed","all","coord","lat","lon","oldCities","alert","exact","path","render","match","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e1d21e3b.chunk.js","sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"./SearchBar.css\"\r\n\r\n// export default function SearchBar({onSearch}) {\r\n//   const [city, setCity] = useState(\"\");\r\n//   return (\r\n//     <div className= \"contenedor\">\r\n//     <form onSubmit={(e) => {\r\n//       e.preventDefault();\r\n//       onSearch(city);\r\n//     }}>\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Ciudad...\"\r\n//         value={city}\r\n//         onChange={e => setCity(e.target.value)}\r\n//       />\r\n//       <input type=\"submit\" className=\"btn\" value=\"Buscar\" />\r\n//     </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nimport React , { useState } from \"react\";\r\n// import { BiSearchAlt } from \"react-icons/bi\"\r\nimport style from \"./SearchBar.css\"\r\n\r\n\r\nexport default function SearchBar({onSearch}) {\r\n  const [city, setCity] = useState(\"\");\r\n  return (\r\n    <div>\r\n    <form className=\"d-flex\" onSubmit={(e) => {\r\n      e.preventDefault();\r\n      onSearch(city);\r\n    }}>\r\n      <input\r\n      className=\"form-control me-2\"\r\n        type=\"text\"\r\n        placeholder=\"Ciudad...\"\r\n        value={city}\r\n        onChange={e => setCity(e.target.value)}\r\n      />\r\n      <button type=\"submit\" className=\"btn btn-outline-primary\"  value=\"Buscar\">\r\n        {/* <BiSearchAlt /> */}\r\n        Buscar\r\n      </button>\r\n    </form>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport './about.css';\r\n\r\n\r\nexport default function About() {\r\nreturn (\r\n    <div className=\"centrado\">\r\n    <div className=\"abou\">\r\n        Esta aplicacion fue creada por:\r\n        <h5 className=\"texto\"> Juan M. Luque </h5>\r\n        <h6 className=\"texto\"> Full Stack Developer</h6>\r\n        <a href={\"https://www.linkedin.com/in/juan-manuel-luque-6b146439\"} type=\"button\">Linkedln</a>\r\n        <a href={\"https://github.com/juanmluq\"} type=\"button\">GitHub</a>\r\n        <a href={\"https://portfolio-eta-seven-60.vercel.app/\"} type=\"button\">Portfolio</a>\r\n    </div>\r\n    </div>\r\n)\r\n}\r\n","import React from 'react';\r\nimport Logo from '../img/logoHenry.png'\r\nimport SearchBar from './SearchBar.jsx';\r\nimport {Link, NavLink} from 'react-router-dom';\r\nimport './Nav.css';\r\nimport About from './About';\r\n// el navlink permite modificar los estilos al link.\r\n\r\nfunction Nav({onSearch}) {\r\n  return (\r\n    <nav className=\"nav nav-tabs\">\r\n      {/* <NavLink to=\"/\">\r\n        <span className=\"navbar-brand\">\r\n           Weather App\r\n        </span>\r\n        </NavLink> */}\r\n         <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" aria-current=\"page\" href=\"/\">Wheather App</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" href=\"/about\">Acerca de mi</a>\r\n  </li>\r\n        {/* <Link to= \"/about\">About</Link> */}\r\n        <div className='search'>\r\n          <SearchBar\r\n          onSearch={onSearch}\r\n        />\r\n        </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport './Card.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Card ({min, max, name, img, onClose, id}) {\r\n    return (\r\n      <div className=\"card\">\r\n        <div id=\"closeIcon\" className=\"row\">\r\n            <button onClick={onClose} className=\"btn btn-sm btn-danger\">X</button>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <Link to={ `/ciudad/${id}` } >\r\n          <h5 className=\"card-title\">{name}</h5>\r\n          </Link>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n              <p>Min</p>\r\n              <p>{min}°</p>\r\n            </div>\r\n            <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n              <p>Max</p>\r\n              <p>{max}°</p>\r\n            </div>\r\n            <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n              <img className=\"iconoClima\" src={\"http://openweathermap.org/img/wn/\"+img+\"@2x.png\"} width=\"80\" height=\"80\" alt=\"\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\n\r\n// import React from 'react';\r\n// import style from './Card.css';\r\n// import Temp from './Temp';\r\n\r\n\r\n// export default function Card ({min, max, name, img, onClose, id}) {\r\n//     return (\r\n// <div className={[style.card, style.main ? style.mainCard : \"\"].join(\" \")}>\r\n//       <span className={style.name}>{name}</span>\r\n//       <button onClick={onClose} className={style.cardBtn}>\r\n//         X\r\n//       </button>\r\n//       <section>\r\n//         <Temp className={style.temp} label=\"Min\" value={min} />\r\n//         <Temp className={style.temp} label=\"Max\" value={max} />\r\n//         <img \r\n//         src={`http://openweathermap.org/img/wn/${img}@${style.main ? 4 : 2}x.png`}\r\n//         alt=\"icono\"\r\n//         />\r\n//       </section>\r\n// </div>\r\n        \r\n//     );\r\n// };","import React from 'react';\r\nimport './Cards.css';\r\n\r\nimport Card from './Card.jsx';\r\n\r\nexport default function Cards({cities, onClose}) {\r\n  return (\r\n    <div className='cards'>\r\n      {cities.map (c => <Card\r\n        id={c.id}\r\n        /* este id lo puse yo para \r\n        que Card reciba el mismo id */\r\n          key={c.id}\r\n          max={c.max}\r\n          min={c.min}\r\n          name={c.name}\r\n          img={c.img}\r\n          onClose= {() => onClose(c.id)} \r\n          /> )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// import React from 'react';\r\n// import style from './Cards.css';\r\n\r\n// import Card from './Card.jsx';\r\n\r\n// export default function Cards({cities}) {\r\n//   return (\r\n//     <div className={style.cards}>\r\n//       {cities.map (c => (<Card\r\n//         id={c.id}\r\n//         /* este id lo puse yo para \r\n//         que Card reciba el mismo id */\r\n//           key={c.id}\r\n//           max={c.max}\r\n//           min={c.min}\r\n//           name={c.name}\r\n//           img={c.weather[0].icon}\r\n//           onClose= {() => alert(c.name)} \r\n//           /> \r\n//           ))}\r\n//     </div>\r\n//   );\r\n// }\r\n","import React from \"react\";\r\nimport \"./ciudad.css\"\r\n\r\nexport default function Ciudad({city}) {\r\n    return (\r\n        <div className=\"centrado\">\r\n        <span className=\"city\">\r\n                     <h2>{city.name}</h2>\r\n                         <div>Temperatura: {city.temp} ºC</div>\r\n                         <div>Clima: {city.weather}</div>\r\n                         <div>Viento: {city.wind} km/h</div>\r\n                         <div>Cantidad de nubes: {city.clouds}</div>\r\n                         <div>Latitud: {city.latitud}º</div>\r\n                         <div>Longitud: {city.longitud}º</div>\r\n        </span>\r\n        </div> \r\n    )\r\n}","import React, { useState } from 'react';\r\n\r\nimport './App.css';\r\nimport Nav from '../components/Nav.jsx';\r\nimport Cards from '../components/Cards.jsx';\r\nimport About from '../components/About';\r\nimport Ciudad from '../components/Ciudad';\r\nimport { Route, Switch } from 'react-router-dom';\r\n// import apiKey from \"./.env\"\r\nconst apiKey = '4ae2636d8dfbdc3044bede63951a019b';\r\n// const {\r\n//   apiKey,\r\n// } = process.env;\r\n\r\nfunction App() {\r\n  const [cities, setCities] = useState([]);\r\n  function onClose(id) {\r\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\r\n  }\r\n  function onSearch(ciudad) {// con esta funcion busco la ciudad para mostrarla en pantalla\r\n    //Llamado a la API del clima\r\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}`)\r\n      .then(r => r.json()) //cuando tengo la respuesta de la api devuelvo un json\r\n      .then((recurso) => { //despues tengo otra funcion que me dice si respuesta.main es distinta de undefined creo un \r\n        //objeto ciudad con info del clima \r\n        if(recurso.main !== undefined){\r\n          const ciudad = {\r\n            min: Math.round(recurso.main.temp_min),\r\n            max: Math.round(recurso.main.temp_max),\r\n            img: recurso.weather[0].icon,\r\n            id: recurso.id,\r\n            wind: recurso.wind.speed,\r\n            temp: recurso.main.temp,\r\n            name: recurso.name,\r\n            weather: recurso.weather[0].main,\r\n            clouds: recurso.clouds.all,\r\n            latitud: recurso.coord.lat,\r\n            longitud: recurso.coord.lon\r\n          };\r\n          setCities(oldCities => [...oldCities, ciudad]); //funcion que le paso oldCities y creo un arreglo con las oldcities y pusheo ciudad\r\n        } else {\r\n          alert(\"Ciudad no encontrada\");// si la respuesta.main es undefined mando el alerta\r\n        }\r\n      });\r\n  }\r\n  function onFilter(ciudadId) {\r\n    let ciudad = cities.filter(c => c.id === parseInt(ciudadId));// cities es un arreglo y con .filter hago que se filtren\r\n    //las ciudades por id\r\n    //paseInt se asegura que la ciudadId que recibe sea un entero\r\n    if(ciudad.length > 0) {\r\n        return ciudad[0];\r\n    } else {\r\n        return null;\r\n    }\r\n    // otra forma de hacer esta funcion es: return cities.find((c => c.id === parseInt(ciudadId))\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Nav onSearch={onSearch}/>\r\n\r\n      <Switch >\r\n      <Route exact path=\"/\"> \r\n        <Cards\r\n          cities={cities}\r\n          onClose={onClose}\r\n        />\r\n        </Route>\r\n\r\n      <Route path=\"/about\"><About/></Route>  {/* llamo about desde aca. si lo hago desde el nav \r\n      me aparece lo que tengo en about en la pantalla principal  */}\r\n      <Route path=\"/ciudad/:id\" render={({match})=>\r\n       <Ciudad city={onFilter(match.params.id)} /> } /> {/* El render nos sirve para poder\r\n       pasar props (en este caso la props match) a nuestro componente. si no lo hago de esta forma \r\n       no tengo como decirle que me traiga el id. \r\n         le digo que haga el render\r\n        y le paso el match que es lo que tiene mi props(las props\r\n         tienen: history, match, location). haciendo match.params estoy diciendo que busque \r\n         un parametro en particular.. en este caso id por eso pongo match.params.id.\r\n         Dato: le paso el match entre {} porque\r\n          hago destructuring.. sino deberia escribir render={(props.match) => <ciudad\r\n          city={onfilter(props.match.params.id)}/>} \r\n          despues la funcion dice que pasandole match.params.id retorno null o el valor de la ciudad\r\n         city */}\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n//exporto App para que lo tome index.js \r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './containers/App';\r\nimport './index.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n\r\nReactDOM.render(\r\n//para usar Browser Router debemos envolver la etiqueta en este caso App\r\n<BrowserRouter>\r\n  <App />\r\n</BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}